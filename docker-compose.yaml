version: '3.7'

services:
  server:
    #build: ./server
    build:
      context: .
      dockerfile: ./server/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./server/logs:/app/logs
    depends_on:
      rabbitmq:
        condition: service_healthy  # Correct placement of health condition
      loki:
        condition: service_started  # Optional if you want a basic condition
      grafana:
        condition: service_started  # Optional if you want a basic condition
    environment:
      RABBITMQ_URI: amqp://admin:admin@rabbitmq:5672/ # amqp://admin:admin@rabbitmq:5672/
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./observability/loki/config:/etc/loki
      - ./observability/loki/data:/loki
      - ./observability/loki/wal:/wal
    command: -config.file=/etc/loki/loki-config.yaml

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./server/logs:/app/logs
      - ./observability/promtail/config:/etc/promtail
    command: -config.file=/etc/promtail/promtail-config.yaml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - ./observability/grafana/data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki

  rabbitmq:
    image: rabbitmq:management #TODO: Development only. For Production, use: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_URI=amqp://admin:admin@localhost:5672/ # amqp://guest:guest@localhost:5672/
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status || exit 1"]  # Check RabbitMQ status only
      interval: 10s      # Check every 10 seconds
      timeout: 5s        # Time allowed for RabbitMQ to respond
      retries: 3         # Retry up to 3 times before marking the service as unhealthy
      start_period: 15s  # Allow up to 15 seconds for RabbitMQ to start before healthcheck begins
  #    healthcheck:
  #      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]

#  prometheus:
#    image: prom/prometheus:latest
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    command:
#      - "--config.file=/etc/prometheus/prometheus.yml"
#    depends_on:
#      - rabbitmq